class Node(object):    def __init__(self, value):        self.next = None        self.prev = None        self.val = valueclass DoubleLinkList(object):    def __init__(self):        self.head = None        self.tail = None        self.size = 0    def add(self, val):        node = Node(val)        if self.tail is None:            self.head = node            self.tail = node            self.size += 1        else:            self.tail.next = node            node.prev = self.tail            self.tail = node            self.size += 1    def __remove_node(self, node):        if node.prev is None:            self.head = node.next        else:            node.prev.next = node.next        if node.next is None:            self.tail = node.prev        else:            node.next.prev = node.prev    def remove(self, value):        node = self.head        while node is not None:            if node.val == value:                self.__remove_node(node)            node = node.next        self.size -= 1    def __str__(self):        values = []        node = self.head        while node is not None:            values.append(node.val)            node = node.next        return f"[{', '.join(str(val) for val in values)}]"link_list = DoubleLinkList()link_list.add(10)link_list.add(12)link_list.add(15)link_list.add(17)link_list.add(20)print(link_list)print(link_list.size)link_list.remove(12)link_list.remove(10)print(link_list)print(link_list.size)