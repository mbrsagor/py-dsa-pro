class Node(object):    def __init__(self, data):        self.data = data        self.next = None        self.prev = Noneclass DLL(object):    def __init__(self):        self.head = None    # Adding data elements    def push(self, new_val):        new_node = Node(new_val)        new_node.next = self.head        if self.head is not None:            self.head.prev = new_node        self.head = new_node    def insert(self, prev_node, val):        if prev_node is None:            return        new_node = Node(val)        new_node.next = prev_node.next        prev_node.next = new_node        new_node.prev = prev_node        if new_node.next is not None:            new_node.next.prev = new_node    # Print the Doubly Linked list    def listprint(self, node):        while node is not None:            print(node.data, end=' '),            node = node.nextdll = DLL()dll.push(12)dll.push(8)dll.push(62)dll.listprint(dll.head)dll.insert(dll.head.next, 13)dll.listprint(dll.head)